return(p)
})
map2(planos[c(1, 3)], results[c(1, 3)], \(x, r)
function(x, r) {
distribution = x$distribution
if(distribution == "bernoulli") {
p = x$p
obs = x$obs
result = r
}
return(p)
})
map2(planos[c(1, 3)], results[c(1, 3)], \(x, r)
function(x, r) {
distribution = x$distribution
if(distribution == "bernoulli") {
p = x$p
obs = x$obs
result = r
}
print(p)
})
map2(planos[c(1, 3)], results[c(1, 3)], .f = \(x, r)
function(x, r) {
distribution = x$distribution
if(distribution == "bernoulli") {
p = x$p
obs = x$obs
result = r
}
print(p)
})
map2(planos[c(1, 3)], results[c(1, 3)],
.f = \(x, r) function(x, r) {
distribution = x$distribution
if(distribution == "bernoulli") {
p = x$p
obs = x$obs
result = r
}
print(p)
})
print(p)
return(result + p)
map2(planos[c(1, 3)], results[c(1, 3)],
.f = \(x, r) function(x, r) {
distribution = x$distribution
if(distribution == "bernoulli") {
p = x$p
obs = x$obs
result = r[[1]]
}
return(result + p)
})
teste = function(x, r) {
distribution = x$distribution
if(distribution == "bernoulli") {
p = x$p
obs = x$obs
result = r[[1]]
}
return(result + p)
map2(planos[c(1, 3)], results[c(1, 3)],
.f = \(x, r)
})
teste = function(x, r) {
distribution = x$distribution
if(distribution == "bernoulli") {
p = x$p
obs = x$obs
result = r[[1]]
}
return(result + p)
map2(planos[c(1, 3)], results[c(1, 3)],
.f = \(x, r)
})
teste = function(x, r) {
distribution = x$distribution
if(distribution == "bernoulli") {
p = x$p
obs = x$obs
result = r[[1]]
}
return(result + p)
}
map2(planos[c(1, 3)], results[c(1, 3)],
.f = \(x, r) teste(x, r))
planos[c(1, 3)]
planos[8]
library(strinr)
library(stringr)
?save
teste = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
save(distribution, p, obs, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
save(distribution, lambda, obs, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
save(distribution, mu, sigma2, obs, file = r)
}
}
paths = list(paste0("simulacao",str_pad(1:100, 3, pad = "0")),".RData")
paths = list(paste0("simulacao",str_pad(1:100, 3, pad = "0"),".RData"))
walk2(planos, paths,
.f = \(x, r) teste(x, r))
paths = list(t(paste0("simulacao",str_pad(1:100, 3, pad = "0"),".RData")))
paste0("simulacao",str_pad(1:100, 3, pad = "0"),".RData")
paths = as.list(paste0("simulacao",str_pad(1:100, 3, pad = "0"),".RData"))
walk2(planos, paths,
.f = \(x, r) teste(x, r))
source("simulador.R")
Sys.getenv("RA")
devtools::source_url("https://ime.unicamp.br/~ra137784/ME918/2023s2/lab01_ig.R")
planos = input_lab01()
result = map(planos, distribuicoes)
library(stringr)
teste = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
save(distribution, p, obs, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
save(distribution, lambda, obs, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
save(distribution, mu, sigma2, obs, file = r)
}
}
paths = as.list(paste0("simulacao",str_pad(1:100, 3, pad = "0"),".RData"))
walk2(planos, paths,
.f = \(x, r) teste(x, r))
?resave
library(cgwtools)
install.packages("cgwtools")
append(lista(1, 2),3)
append(list(1, 2),3)
map2(planos, result, append())
map2(planos, result, \(x, y) append(x, y))
append(planos[[1]], result[[1]])
(append(planos[[1]], result[[1]]))[[4:23]]
(append(planos[[1]], result[[1]]))
a = (append(planos[[1]], result[[1]]))
a[[4:23]]
a[[4,5]]
a[[4]]
exit = map2(planos, result, \(x, y) append(x, y))
a = exit[[1]]
a[4:23]
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:4+obs-1]
save(distribution, p, obs, result, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:4+obs-1]
save(distribution, lambda, obs, result, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:5+obs-1]
save(distribution, mu, sigma2, obs, result, file = r)
}
}
paths = as.list(paste0("simulacao",str_pad(1:100, 3, pad = "0"),".RData"))
walk2(planos, paths,
.f = \(x, r) fun1(x, r))
load("~/AtividadeME918/simulacao001.RData")
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:4+obs-1]
save(distribution, p, obs, result, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:4+obs-1]
save(distribution, lambda, obs, result, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:5+obs-1]
save(distribution, mu, sigma2, obs, result, file = r)
}
return(result)
}
fun1(a, paths[[1]])
a[4:4+obs-1]
obs
a[4:23]
a[4:(4+obs-1)]
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, p, obs, result, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, lambda, obs, result, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:(5+obs-1)]
save(distribution, mu, sigma2, obs, result, file = r)
}
}
walk2(planos, paths,
.f = \(x, r) fun1(x, r))
load("~/AtividadeME918/simulacao001.RData")
result
x = a
result = x[4:(4+obs-1)]
source("simulador.R")
Sys.getenv("RA")
devtools::source_url("https://ime.unicamp.br/~ra137784/ME918/2023s2/lab01_ig.R")
planos = input_lab01()
result = map(planos, distribuicoes)
library(stringr)
exit = map2(planos, result, \(x, y) append(x, y))
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, p, obs, result, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, lambda, obs, result, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:(5+obs-1)]
save(distribution, mu, sigma2, obs, result, file = r)
}
}
paths = as.list(paste0("simulacao",str_pad(1:100, 3, pad = "0"),".RData"))
walk2(planos, paths,
.f = \(x, r) fun1(x, r))
load("~/AtividadeME918/simulacao001.RData")
x = exit[[1]]
p = x[[2]]
obs = x[[3]]
obs
result = x[4:(4+obs-1)]
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, p, obs, as.list(result), file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, lambda, obs, result, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:(5+obs-1)]
save(distribution, mu, sigma2, obs, result, file = r)
}
}
walk2(planos, paths,
.f = \(x, r) fun1(x, r))
as.list(result)
?saveRDS
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, p, obs, file = r)
saveRDS(result, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, lambda, obs, result, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:(5+obs-1)]
save(distribution, mu, sigma2, obs, result, file = r)
}
}
walk2(planos, paths,
.f = \(x, r) fun1(x, r))
load("~/AtividadeME918/simulacao001.RData")
load("~/AtividadeME918/simulacao002.RData")
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, p, obs, file = r)
saveRDS(result, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, lambda, obs, file = r)
saveRDS(result, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:(5+obs-1)]
save(distribution, mu, sigma2, obs, file = r)
saveRDS(result, file = r)
}
}
walk2(planos, paths,
.f = \(x, r) fun1(x, r))
load("~/AtividadeME918/simulacao002.RData")
source("simulador.R")
Sys.getenv("RA")
devtools::source_url("https://ime.unicamp.br/~ra137784/ME918/2023s2/lab01_ig.R")
planos = input_lab01()
result = map(planos, distribuicoes)
library(stringr)
exit = map2(planos, result, \(x, y) append(x, y))
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, p, obs, file = r)
saveRDS(result, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, lambda, obs, file = r)
saveRDS(result, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:(5+obs-1)]
save(distribution, mu, sigma2, obs, file = r)
saveRDS(result, file = r)
}
}
paths = as.list(paste0("simulacao",str_pad(1:100, 3, pad = "0"),".RData"))
walk2(planos, paths,
.f = \(x, r) fun1(x, r))
load("~/AtividadeME918/simulacao002.RData")
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, p, obs, file = r)
saveRDS(result, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, lambda, obs, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:(5+obs-1)]
save(distribution, mu, sigma2, obs, file = r)
}
}
paths = as.list(paste0("simulacao",str_pad(1:100, 3, pad = "0"),".RData"))
walk2(planos, paths,
.f = \(x, r) fun1(x, r))
load("~/AtividadeME918/simulacao004.RData")
load("~/AtividadeME918/simulacao001.RData")
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, p, obs, result, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, lambda, obs, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:(5+obs-1)]
save(distribution, mu, sigma2, obs, file = r)
}
}
walk2(planos, paths,
.f = \(x, r) fun1(x, r))
load("~/AtividadeME918/simulacao001.RData")
fun1 = function(x, r) {
distribution = x[[1]]
if(distribution == "bernoulli") {
p = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, p, obs, result, file = r)
saveRDS(result, file = r)
}
else
if(distribution == "poisson") {
lambda = x[[2]]
obs = x[[3]]
result = x[4:(4+obs-1)]
save(distribution, lambda, obs, file = r)
}
else
if(distribution == "normal") {
mu = x[[2]]
sigma2 = x[[3]]
obs = x[[4]]
result = x[5:(5+obs-1)]
save(distribution, mu, sigma2, obs, file = r)
}
}
walk2(planos, paths,
.f = \(x, r) fun1(x, r))
load("~/AtividadeME918/simulacao001.RData")
load("~/AtividadeME918/simulacao003.RData")
load("~/AtividadeME918/simulacao006.RData")
load("~/AtividadeME918/simulacao096.RData")
planos[[96]]
load("C:/Users/lauro/OneDrive/Documentos/AtividadeME918/simulacao001.RData")
